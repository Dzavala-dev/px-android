apply plugin: 'com.android.library'
apply plugin: 'maven-publish'


android {
    compileSdkVersion api_level.toInteger()
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_api_level.toInteger()
        targetSdkVersion api_level.toInteger()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled false
            multiDexEnabled true
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    project.gradle.taskGraph.whenReady {
        connectedDebugAndroidTest {
            ignoreFailures = true
        }
    }
}

project.gradle.taskGraph.whenReady {
    connectedDebugAndroidTest {
        ignoreFailures = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation "junit:junit:$junit"

    implementation "com.android.support:appcompat-v7:$build_tools_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.google.code.gson:gson:2.7"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
}

// -- Publicar LOCAL ------------------------------------------------------

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {
        msdk(MavenPublication) {

            groupId 'com.mercadopago'
            artifactId 'tracking'
            version '1.0.0.local'
            artifact(bundleRelease)
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "${System.env.HOME}/.m2/repository"
        }
    }
}